<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACVAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADKklEQVRYR62XTU8U
        QRCG9z8pRgVREwEXCB8G5QSYGC8skZsaSdSDmsBFD169mHjhF3gyMSoREo8mIBK/wuw4y7LoIvs53XbV
        zDQ13TWzu+KbPNnprre7i53u6iUjhPAVHau2uS683LRwRs6InYV50dj+HkY6EyQgZBtquHmZH+5pj8HT
        UtZq4ch0tUyg+mGVX6RN/HI5nIlXagLchP9E9lQ4oy0+AeHzE1EGToTmQJX3b/CrZ70hnOwE2lmcMtSN
        w5qeK0XlAJ+96VHeqzBlJcANaofy8nM9vv51Sz9zUMUS4MydUFyY1/M4/ceD5yH7tTjk9ekEqmsrltEv
        FtBk9qchKhXpXu4L2nAcE8bLZhNjOgHT4E5m0VRaui/93aIVT4PO5070qX0lYvEIECbQ2P4RD4YbSxv9
        pvSuTcQ9KYhqFY9e1Ma51JzUg/0qMUzACig52ZNWH/c+OZwLx2Rt/eNh30ivrKy9i3kAp6/LTkDUqrK0
        eDdmRMJiYvUnYHrNdkQsAe/qJVX0G5YpAna5v/+bjZmYC5rtiEx965NOIMlEgWKzczvHxijmXGY7IgNX
        KjygYfSszI+dCzCMul+B3sHDTQYU5mZioIfE4XgWclMxjzczLjNwn0MNqKy81lRX38qDVy8PJ4D3r0o0
        9QB0gd2wCP16uqSh8b3HD3T/3pOH6IX+zM6tOesU5Id6ZOPbF9JWxzLhLFPEn31ZvDnLxijR4kAGfsnQ
        IAILqiJE++igNNBnvB6K9H0sTlGbrQMATpTSTsQoYpTyi2fq1vwZ6/v/CSi865NYPWlfdAHRPiBIgPsh
        MdYrm862bkMNMDdWGn5pV5YeLeg2t3h+uDtIQNRrTPBo3wKAfrUf4L1zRxuECaDRCCJG+a1/3pDFOzfi
        njTC/VDf3GDjIJ0A/HrlTIXZKTRGbXxmbrYk3CsDbD8ca5BOAESvUIo7fh7j8Bn9VU5/F+ttB3fyIs4B
        iiUA4gZEiPCfjdLiPfz0Cy7rawWVlQCIG0SBmm6K83GYYhMAcYOPCqfEBEBQPLiJOoW+c1OpCaCMO6FT
        Wql1ApGUDX7DcYvYBCeltaT8CwUssJrUXoeiAAAAAElFTkSuQmCC
</value>
  </data>
</root>